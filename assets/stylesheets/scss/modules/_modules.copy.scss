/* ==========================================================================
   Copy
   ========================================================================== */

/**
 * Scoped styles of blocks of (body) content
 */

.Copy {

	/* Baseline
	   ========================================================================== */

	// $lh: 22px;
	// background: repeating-linear-gradient(to bottom, transparent 0px, transparent #{$lh - 1px}, black #{$lh - 1px}, black $lh);
	// background-position: 0 2px;

	/* Vertical spacing
	   ========================================================================== */

	/**
	 * Set default vertical spacing for all elements:
	 * 1. every second, third, etc. element that has not a `.Grid` class
	 * 2. every element with a `.Grid` class that is not proceded
	 *    by an element with a `.Grid` class
	 *
	 * Based on 'The "Leftover Glue" problem' solution:
	 * http://slides.com/heydon/effortless-style/#/22
	 */

	> * + *:not(.Grid), // [1]
	> *:not(.Grid) + .Grid { // [2]
		margin-top: rhythm(1);
	}

	/**
	 * Set additonal vertical spacing aroundf figure elements:
	 * 3. every figure with a `FigureImage` class that comes direclty
	 *    after an element without a `.Grid` class
	 * 4. every element that has not a `.Grid` class and is proceded
	 *    by a figure element with `.FigureImage` class
	 */

	> *:not(.Grid) + .FigureImage, // [3]
	> .FigureImage + *:not(.Grid) { // [4]
		margin-top: rhythm(3);
	}

	/**
	 * Reset (decrease) some margins for better typography (proximity)
	 * See: http://zellwk.com/blog/wrong-about-vertical-rhythm/
	 */

	> *:not(.Grid) + p {
		margin-top: rhythm(.5) !important;
	}

	> *:not(.Grid) + ul,
	> *:not(.Grid) + ol,
	> *:not(.Grid) + dl {
		margin-top: rhythm(.5) !important;
	}

	> h2 + *:not(.Grid),
	> h3 + *:not(.Grid) {
		margin-top: rhythm(.5) !important;
	}

	> h4 + p:not(.Grid),
	> h5 + p:not(.Grid),
	> h6 + p:not(.Grid) {
		margin-top: 0 !important;
	}

	/* Text max width
	========================================================================== */

	> h1, > h2, > h3, > h4, > h5, > h6,
	> p,
	> ul li,
	> ol li,
	> dl dt,
	> dl dd,
	> time,
	> table,
	> form,
	> .Blockquote,
	figcaption p {
		max-width: $text-max-width;//breakpoint-value-for("medium");
		// margin-right: auto; // Center maximized text 'column'
		// margin-left: auto;
	}

	/* Hyphenation
	========================================================================== */

	// > p,
	// > ul li,
	// > ol li,
	// > dl dt,
	// > dl dd,
	// > time,
	// > table,
	// figcaption p {
	// 	hyphens: auto;
	// }

	/**
	 * Overrule hyphenation
	 *
	 * For Kirby tag 'nohyphen';
	 * Usage: (nohyphen: <your text not to be hyphenated>)
	 */

	// .u-textNoHyphen {
	// 	hyphens: none;
	// }

	/* Paragraphs
	   ========================================================================== */

	// p:first-of-type { }

	// p:first-child { }

	// p + p {
	// 	margin-top: rhythm(-1);
	// 	text-indent: rhythm(1);
	// }

	// p:first-child:first-letter { }

	/* Headings
	   ========================================================================== */

	/* Scoped headings (see extend-selectors.scss for corresponding 'unscoped' classes) */

	// h1.u-teraHeading { @extend .TeraHeading; }
	// h1.u-gigaHeading { @extend .GigaHeading; }
	// h1.u-megaHeading { @extend .MegaHeading; }

	h1 { @extend .AlphaHeading; }
	h2 { @extend .BetaHeading; }
	h3 { @extend .GammaHeading; }
	h4 { @extend .DeltaHeading; }
	h5 { @extend .EpsilonHeading; }
	h6 { @extend .ZetaHeading; }

	/* Figures
	   ========================================================================== */

	// figcaption {}

	/* Pull, block- and run-in quotes
	   ========================================================================== */

	// .Quote {}

	// .Blockquote {}

	// .Pullquote {}

	/* Inline Elements
	   ========================================================================== */

	i,
	em,
	cite {
		@extend %u-textItalic;
	}

	b,
	strong {
		@extend %u-textBold;
	}

	small {
		@extend %u-textSmall;
	}

	time {
		@extend %u-textTime;
	}

	/* Addresses styling not present in IE7/8/9 */

	mark {
		background-color: rgb(248,248,0);
		color: $color-base-black;
	}

	ins {
		@include underline($color-gray-m-light, rgb(253,254,206));

		background-color: rgb(253,254,206);
		color: $color-base-black;
	}

	del {
		background-color: rgb(248,0,0);
		color: $color-base-black;
	}

	/* Addresses styling not present in IE7/8/9, S5, Chrome */

	abbr {
		text-transform: lowercase;
		letter-spacing: .05em;
		font-variant: small-caps; // https://developer.mozilla.org/en-US/docs/CSS/font-variant
	}

	code,
	kbd,
	pre,
	samp {
		@include mono-font();
	}

	code {
		background-color: $color-gray-x-light;
	}

	/* Lists
	   ========================================================================== */

	/* Unordered lists */

	ul,
	ol {
		@extend .List;
	}

	/* Definition lists */

	// dl { }

	dt {
		font-weight: 700;
	}

	dd {
		margin-left: rhythm(1);
	}

	/* Links
	   ========================================================================== */

	a:not(.Button) {
		@extend .Link;
	}

	/* External page links */

	// [href^="http:"]:not([href*="mydomain.com"]) { }

	/* Secure link */

	// [href^="https"]:before { content: "\1F512 "; }

	/* PDF link */

	// [href$="pdf"] { }

	/* Email link */

	// [href^="mailto:"] { }

	/* Twitter link */

	// [href*="twitter.com"] {}

	/* Tables
	   ========================================================================== */

	table {
		@extend .Table;
		@extend .Table--striped;
	}

}
