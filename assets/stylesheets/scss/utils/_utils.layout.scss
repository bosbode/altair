/* ==========================================================================
   Layout (https://raw.github.com/suitcss/utils-layout)
   ========================================================================== */

/**
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */

%u-alignTop {
	vertical-align: top;
}

%u-alignMiddle {
	vertical-align: middle;
}

%u-alignBaseline {
	vertical-align: baseline;
}

%u-alignBottom {
	vertical-align: bottom;
}

/**
 * Contain floats (aka clearfix)
 *
 * 1. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 *    Set `$contain-top-margins` to "margins" below, to  globally output the clearix
 *    version that contains top-margins as well. Or include the clearfix mixin
 *    with with the "margins" variable (e.g. `@include clearfix("margins")`)
 *    to contain top-margins only for that element/class.
 */

%u-cf {
	@include clearfix(); // [1]
}

/**
 * Cross browser inline block (see: https://blog.mozilla.org/webdev/?p=241)
 *
 * Usage:
 *    @include inline-block;
 *
 * Or to give a min-height to the inline-block elements
 *    @include inline-block("250px")
*/

@mixin u-ib($min-height: "") {
	display: inline-block;

	@if $min-height != "" {
		min-height: $min-height;
	}
}

%u-ib {
	@include u-ib();
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

%u-nbfc {
	overflow: hidden;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

%u-nbfcAlt {
	display: table-cell; // [1]
	width: 10000px; // [2]
}

/**
 * Floats
 */

%u-pullLeft {
	float: left;
}

%u-pullRight {
	float: right;
}

/**
 * Object position helpers.
 *
 * Float an object left or right, and include some space between the object and
 * proceeding objects.
 */

%u-objLeft {
	float: left;
	margin-right: rhythm(1);
}

%u-objRight {
	float: right;
	margin-left: rhythm(1);
}

/**
 * 1. Remove excess space below images
 * 2. Guard against `img {max-width:100%}` hiding this utility's images in
 *    IE 8.
 */

%u-objLeft img,
%u-objRight img {
	display: block; // [1]
	max-width: none; // [2]
}
