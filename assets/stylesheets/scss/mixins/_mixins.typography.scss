// --------------------------------------------------------------------------
// Typography
// --------------------------------------------------------------------------
// Typografic scale: http://type-scale.com, http://modularscale.com
// Vertical rhythm (baseline): https://github.com/ianrose/typesettings
// --------------------------------------------------------------------------

// Base text size
// --------------------------------------------------------------------------
// Generates procentual base font sizes for the the to be included breakpoints.
// Add to `html {}` or `body {}` element:
// html {
//   @include base-text-sizes("base");
// }

// @mixin base-text-sizes($default-breakpoint-name: "small") {

// 	// Loop through each breakpoint name to be included
// 	@each $breakpoint-to-include in $breakpoints-to-include {

// 		$base-text-size: base-font-size-for($breakpoint-to-include);

// 		@if $base-text-size != null {

// 			@if $breakpoint-to-include == "small" {
// 				font-size: $base-text-size;
// 			} @else {
// 				@include breakpoint($breakpoint-to-include) {
// 					font-size: $base-text-size;
// 				}
// 			}

// 		} @else {
// 			@warn "Missing base font size for '#{$breakpoint-name}' breakpoint";
// 		}

// 	}
// }
@mixin base-text-sizes($default-breakpoint-name: "small") {

	// Loop through each breakpoint name to be included
	@each $breakpoint-to-include in $breakpoints-to-include {

		// Check if breakpoint name is valid (exists in breakpoints list)
		@if breakpoints-map($breakpoint-to-include) != null {

			$base-text-size: base-font-size-for($breakpoint-to-include);
			$line-height: text-line-height("base", $default-breakpoint-name, $lines: 1);

			@if $base-text-size != null {

				@if $breakpoint-to-include == "small" {
					font-size: $base-text-size;
					line-height: $line-height;
				} @else {
					@include breakpoint($breakpoint-to-include) {
						font-size: $base-text-size;
					}
				}
			} @else {
				@warn "Missing base font size for '#{default-$breakpoint-name}' breakpoint";
			}

		} @else {
			@warn "Breakpoint '#{$breakpoint-to-include}' is not in breakpoints list (settings)";
		}

	}
}

// Text size
// --------------------------------------------------------------------------

@mixin responsive-text-size($text-size-name, $default-breakpoint-name: "small", $lines: 1) {
	font-size: text-size($text-size-name, $default-breakpoint-name, $lines);
	line-height: text-line-height($text-size-name, $default-breakpoint-name, $lines);

	$text-breakpoints-map: text-breakpoints-for($text-size-name);
	$text-breakpoints-keys: map-keys($text-breakpoints-map);

	@each $breakpoint-name in $text-breakpoints-keys {
		@if $breakpoint-name != $default-breakpoint-name and breakpoints-map($breakpoint-name) != null {
			@include breakpoint($breakpoint-name) {
				// If font-size is set for given text size breakpoint
				$text-properties: text-properties-for($text-size-name, $breakpoint-name);
				@if map-get($text-properties, "font-size") != null {
					font-size: text-size($text-size-name, $breakpoint-name, $lines);
				}
				line-height: text-line-height($text-size-name, $breakpoint-name, $lines);
			}
		}
	}
}
